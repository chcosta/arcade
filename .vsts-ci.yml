phases:
- phase: Windows_NT
  # variables apply to every build configuration in the matrix
  variables: 
    _PublishBlobFeedUrl: https://dotnetfeed.blob.core.windows.net/dotnet-tools-internal/index.json
    _SignType: test
    _UseEsrpSigning: true
    _TeamName: DotNetCore
    HelixSource: official/dotnet/arcade/$(Build.SourceBranch)
    HelixType: build/product
  queue:
    name: Hosted VS2017
    parallel: 2
    demands: 
      - agent.os -equals Windows_NT
    matrix:
      Build_Debug:
        _BuildConfig: Debug
        _PublishType: none
      Build_Release:
        _BuildConfig: Release
        _PublishType: blob
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1
  - template: eng/common/telemetry.yaml
    parameters:
      buildSteps:
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'DotNet-Engineering-Services_KeyVault'
          KeyVaultName: EngKeyVault
          SecretsFilter: 'dotnetfeed-storage-access-key-1'
      # Build and Publish on the Release configuration
      - script: eng\common\CIBuild.cmd -configuration $(_BuildConfig) -prepareMachine
                  /p:PB_PublishType=$(_PublishType)
                  /p:PB_PublishBlobFeedUrl=$(_PublishBlobFeedUrl)
                  /p:PB_PublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
                  /p:SignType=$(_SignType)
        name: Build_Publish
        displayName: Build / Publish
        env:
          OfficialBuildId: $(BUILD.BUILDNUMBER)
      # Copy build logs to a staging directory
      - task: CopyFiles@2
        displayName: Gather Logs
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)\artifacts'
          Contents: '**\*log'
          TargetFolder: '$(Build.StagingDirectory)\BuildLogs'
        continueOnError: true
        condition: succeededOrFailed()
      # Publish build logs to VSTS  
      - task: PublishBuildArtifacts@1
        displayName: Publish Logs to VSTS
        inputs:
          PathtoPublish: '$(Build.StagingDirectory)\BuildLogs'
          ArtifactName: Windows_$(Agent.JobName)
          publishLocation: Container
        continueOnError: true
        condition: succeededOrFailed()
