trigger:
  batch: true
  branches:
    include:
    - master
    
pr:
  branches:
    include:
    - master
    - templates
  paths:
    exclude:
    - Documentation/*
    
variables:
  # Cannot use key:value syntax in root defined variables
  - name: _TeamName
    value: DotNetCore
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: .NETCore
  - name: _DotNetValidationArtifactsCategory
    value: .NETCoreValidation
  - name: system.debug
    value: true
  - name: agent.diagnostics
    value: true
  - name: VSTS_AGENT_TRACE
    value: true

resources:
  containers:
  - container: LinuxContainer
    image: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-0cd4667-20170319080304

stages:
- stage: build
  displayName: Build
  jobs:
  - job: build
    pool:
      # For public or PR jobs, use the hosted pool.  For internal jobs use the internal pool.
      # Will eventually change this to two BYOC pools.
      name: NetCorePublic-Pool
      queue: BuildPool.Windows.10.Amd64.VS2017.Open
    strategy:
      matrix:
        Build_Release:
          _BuildConfig: Release
        Build_Debug:
          _BuildConfig: Debug

    steps:
    - task: sendStartTelemetry@0
      displayName: 'Send Helix Start Telemetry'
      inputs:
        helixRepo: dotnet/arcade
        buildConfig: Debug
      continueOnError: true
      condition: always()
    - powershell: |
        eng\common\build.ps1 -configuration $(_BuildConfig) -prepareMachine-ci -projects $(Build.SourcesDirectory)\chcosta.proj /bl:$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)/chcosta.binlog
    - task: sendEndTelemetry@0
      displayName: 'Send Helix End Telemetry'
      continueOnError: true
      condition: always()
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: artifacts
      continueOnError: true
      condition: always()
- stage: dependent
  dependsOn: build
  jobs:
  - job: print
    steps:
    - script: echo 'hello'