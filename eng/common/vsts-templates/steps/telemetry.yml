
parameters:
  _agentOs: Windows_NT
  conditionReasons: Manual,Scheduled
  buildReason: ''
  steps: []

steps:
- template: /eng/common/templates/steps/steps-reasoned.yml
  parameters:
    buildReason: ${{ parameters.buildReason }}
    conditionReasons: ${{ parameters.conditionReasons }}
    steps:
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'HelixProd_KeyVault'
          KeyVaultName: HelixProdKV
          SecretsFilter: 'HelixApiAccessToken'
      - template: /eng/common/templates/steps/steps-unix.yml
        parameters:
          _agentOs: ${{ parameters._agentOs }}
          steps:
            - bash: |
                /bin/bash ./telemetry/start-job.sh --source "$Source" --type "$Type" --build "$Build" --queue-id "$QueueId" --attempt "$Attempt" -p "operatingSystem=$OperatingSystem" -p "configuration=$Configuration"
              workingDirectory: $(Build.SourcesDirectory)/eng/common
              displayName: Send Job Start Telemetry
              env:
                HelixApiAccessToken: $(HelixApiAccessToken)
                Source: $(HelixSource)
                Type: $(HelixType)
                Build: $(Build.BuildNumber)
                QueueId: $(Agent.OS)
                Attempt: 1
                OperatingSystem: $(Agent.OS)
                Configuration: $(_BuildConfig)
            - bash: |
                /bin/bash ./telemetry/build/start.sh --build-uri "$BuildUri"
              condition: not(in(variables['Agent.OS'], 'Windows_NT'))
              workingDirectory: $(Build.SourcesDirectory)/eng/common
              displayName: Send Build Start Telemetry
              env:
                BuildUri: https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=$(Build.BuildId)&_a=summary
                Helix_JobToken: $(Helix_JobToken)
      - template: /eng/common/templates/steps/steps-windows.yml
        parameters:
          _agentOs: ${{ parameters._agentOs }}
          steps:
            - powershell: |
                ./telemetry/start-job.ps1 -Source $env:Source -Type $env:Type -Build $env:Build -QueueId $env:QueueId -Attempt $env:Attempt -Properties @{ operatingSystem=$env:OperatingSystem; configuration=$env:Configuration } -Verbose
                if ($LASTEXITCODE -ne 0) {
                  exit $LASTEXITCODE
                }
              workingDirectory: $(Build.SourcesDirectory)/eng/common
              displayName: Send Job Start Telemetry
              env:
                HelixApiAccessToken: $(HelixApiAccessToken)
                Source: $(HelixSource)
                Type: $(HelixType)
                Build: $(Build.BuildNumber)
                QueueId: $(Agent.OS)
                Attempt: 1
                OperatingSystem: $(Agent.OS)
                Configuration: $(_BuildConfig)
            - powershell: |
                ./telemetry/build/start.ps1 -BuildUri $env:BuildUri
                if ($LASTEXITCODE -ne 0) {
                  exit $LASTEXITCODE
                }
              condition: in(variables['Agent.OS'], 'Windows_NT')
              workingDirectory: $(Build.SourcesDirectory)/eng/common
              displayName: Send Build Start Telemetry
              env:
                BuildUri: https://devdiv.visualstudio.com/DevDiv/_build/index?buildId=$(Build.BuildId)&_a=summary
                Helix_JobToken: $(Helix_JobToken)

      - ${{ parameters.steps }}

      - template: /eng/common/templates/steps/steps-unix.yml
        parameters:
          _agentOs: ${{ parameters._agentOs }}
          steps:
            - bash: |
                /bin/bash ./telemetry/build/end.sh
              condition: not(in(variables['Agent.OS'], 'Windows_NT'))
              workingDirectory: $(Build.SourcesDirectory)/eng/common
              displayName: Send Build End Telemetry
              env:
                Helix_JobToken: $(Helix_JobToken)
                Helix_WorkItemId: $(Helix_WorkItemId)

      - template: /eng/common/templates/steps/steps-windows.yml
        parameters:
          _agentOs: ${{ parameters._agentOs }}
          steps:
            - powershell: |
                ./telemetry/build/end.ps1
                if ($LASTEXITCODE -ne 0) {
                  exit $LASTEXITCODE
                }
              condition: in(variables['Agent.OS'], 'Windows_NT')
              workingDirectory: $(Build.SourcesDirectory)/eng/common
              displayName: Send Build End Telemetry
              env:
                Helix_JobToken: $(Helix_JobToken)
                Helix_WorkItemId: $(Helix_WorkItemId)
