# build.yml
# Description: Defines the build phase
# Parameters:
#   agentOs: [Windows_NT, Linux, OSX] Used in templates to define variables which are OS specific
#   dockerImage: If defined, specifies docker image to run build steps in
#   matrix: build matrix
#   queueName: agent pool name

parameters:
  agentOs: Windows_NT
  buildReason: ''
  dockerImage: ''
  matrix: 
    Build_Debug:
      buildConfig: Debug
      publishType: none
    Build_Release:
      buildConfig: Release
      publishType: none
  queueName: ''

phases:
- template: /eng/common/templates/phases/os-reason-layer.yml
  parameters:
    agentOs: ${{ parameters.agentOs }}
    phase:
      variables: 
        _PublishBlobFeedUrl: https://dotnetfeed.blob.core.windows.net/dotnet-tools-internal/index.json
        _SignType: test
        _UseEsrpSigning: true
        _TeamName: DotNetCore
        HelixSource: official/dotnet/arcade/$(Build.SourceBranch)
        HelixType: build/product
        _PREVIEW_VSTS_DOCKER_IMAGE: ${{ parameters.dockerImage }}
      queue:
        name: ${{ parameters.queueName }}
        matrix: ${{ parameters.matrix }}
      steps:
      - template: /eng/common/templates/steps/reasoned.yml
        parameters:
          buildReason: ${{ parameters.buildReason }}
          conditionReasons: Manual,Scheduled
          steps:
            - task: AzureKeyVault@1
              inputs:
                azureSubscription: 'DotNet-Engineering-Services_KeyVault'
                KeyVaultName: EngKeyVault
                SecretsFilter: 'dotnetfeed-storage-access-key-1'
            - script: $(engCommonDirectory)cibuild.$(scriptExtension)
              -configuration $(buildConfig) 
              -prepareMachine $(BuildReasonArgs)
              /p:PB_PublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
              /p:PB_PublishBlobFeedUrl=$(_PublishBlobFeedUrl)
              /p:PB_PublishType=$(publishType)
              /p:SignType=$(_SignType)
            name: Build_Publish
            displayName: Build / Publish
            env:
              OfficialBuildId: $(BUILD.BUILDNUMBER)
              engCommonDirectory: $(engCommonDirectory)
              scriptExtension: $(scriptExtension)
              BuildReasonArgs: $(BuildReasonArgs)
      - template: /eng/common/templates/steps/reasoned.yml
        parameters:
          buildReason: ${{ parameters.buildReason }}
          conditionReasons: not Manual,Scheduled
          steps:
          - script: $(engCommonDirectory)cibuild.$(scriptExtension) -configuration $(buildConfig) -prepareMachine $(BuildReasonArgs)
            name: Build_Publish
            displayName: Build / Publish
            env:
              OfficialBuildId: $(BUILD.BUILDNUMBER)
              engCommonDirectory: $(engCommonDirectory)
              scriptExtension: $(scriptExtension)
              BuildReasonArgs: $(BuildReasonArgs)
      - task: CopyFiles@2
        displayName: Gather Logs
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/artifacts'
          Contents: '**/*log'
          TargetFolder: '$(Build.StagingDirectory)/BuildLogs'
        continueOnError: true
        condition: succeededOrFailed()
      - task: PublishBuildArtifacts@1
        displayName: Publish Logs to VSTS
        inputs:
          PathtoPublish: '$(Build.StagingDirectory)/BuildLogs'
          ArtifactName: ${{ parameters.agentOs }}_$(Agent.JobName)
          PublishLocation: Container
        continueOnError: true
        condition: succeededOrFailed()
